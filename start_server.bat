@echo off
echo 🌐 Starting local web server for sniper game...
echo 📁 Serving from: %CD%
echo 🎮 Game will be available at: http://localhost:8000/index_autonomous.html
echo ⚠️  Keep this window open while playing!
echo.
powershell.exe -ExecutionPolicy Bypass -Command "& { Add-Type -AssemblyName System.Web; $listener = New-Object System.Net.HttpListener; $listener.Prefixes.Add('http://localhost:8000/'); $listener.Start(); Write-Host '✅ Server running at http://localhost:8000'; Write-Host '🎯 Click here: http://localhost:8000/index_autonomous.html'; Write-Host ''; Write-Host 'Press Ctrl+C to stop server'; try { while ($listener.IsListening) { $context = $listener.GetContext(); $request = $context.Request; $response = $context.Response; $path = if ($request.Url.AbsolutePath -eq '/') { 'index.html' } else { $request.Url.AbsolutePath.TrimStart('/') }; $fullPath = Join-Path (Get-Location) $path; if (Test-Path $fullPath) { $bytes = [System.IO.File]::ReadAllBytes($fullPath); $ext = [System.IO.Path]::GetExtension($fullPath); $contentType = switch ($ext) { '.html' { 'text/html' } '.js' { 'text/javascript' } '.css' { 'text/css' } '.glb' { 'model/gltf-binary' } '.mp3' { 'audio/mpeg' } default { 'application/octet-stream' } }; $response.ContentType = $contentType; $response.Headers.Add('Access-Control-Allow-Origin', '*'); $response.ContentLength64 = $bytes.Length; $response.OutputStream.Write($bytes, 0, $bytes.Length); Write-Host \"📄 Served: $path\"; } else { $response.StatusCode = 404; $responseBytes = [System.Text.Encoding]::UTF8.GetBytes('File not found'); $response.OutputStream.Write($responseBytes, 0, $responseBytes.Length); Write-Host \"❌ Not found: $path\"; } $response.Close(); } } catch { Write-Host 'Server stopped'; } finally { $listener.Stop(); } }"
pause
